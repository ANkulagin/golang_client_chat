# Данный файл .github/workflows/go.yaml является конфигурацией для GitHub Actions,
# которая автоматизирует процессы сборки, тестирования и линтинга вашего Go-кода. При каждом push или pull request в ветки main или master,
# этот workflow запускает задания для проверки качества кода, что помогает обнаружить ошибки и поддерживать высокий стандарт кода.
name: Go  # Название этого workflow для идентификации в GitHub Actions

on:
  push:
    branches: [ main, master ]  # Запускать workflow при push в ветки main или master
  pull_request:
    branches: [ main, master ]  # Запускать workflow при pull request в ветки main или master

jobs:
  build-and-test:  # Определение задания для сборки и тестирования кода
    runs-on: ubuntu-latest  # Задание будет выполняться на последней версии Ubuntu
    steps:
      - uses: actions/checkout@v4  # Шаг для клонирования кода из репозитория

      - name: Set up Go
        uses: actions/setup-go@v5  # Шаг для установки Go на виртуальную машину
        with:
          go-version: '1.22'  # Устанавливаем конкретную версию Go 1.22
          cache-dependency-path: go.sum  # Кэшируем зависимости, указанные в go.sum

      - name: Build
        run: go build -o ./bin/ -v ./...  # Сборка проекта, вывод бинарных файлов в папку ./bin/

      - name: Test
        run: go test -v ./...  # Запуск всех тестов с подробным выводом

  linter:  # Определение задания для линтинга (статического анализа) кода
    name: lint  # Название задания
    runs-on: ubuntu-latest  # Задание будет выполняться на последней версии Ubuntu
    steps:
      - uses: actions/checkout@v4  # Клонирование кода из репозитория
      - uses: actions/setup-go@v5  # Установка Go
        with:
          go-version: '1.22'  # Версия Go 1.22
          cache: false  # Отключение кэширования установки Go

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6  # Использование действия для запуска golangci-lint
        with:
          version: v1.60  # Версия golangci-lint, которую необходимо использовать

          # Дополнительные аргументы для команды golangci-lint
          args: --timeout=30m --config=./.golangci.pipeline.yaml  # Установка таймаута и указание конфигурационного файла

          # Закомментированные опции, которые можно настроить при необходимости:
          # only-new-issues: true  # Показывать только новые проблемы в pull request
          # skip-cache: true  # Полностью отключить кэширование
          # skip-pkg-cache: true  # Не кэшировать каталог пакетов Go
          # skip-build-cache: true  # Не кэшировать результаты сборки Go
          # install-mode: "goinstall"  # Режим установки golangci-lint (binary или goinstall)
